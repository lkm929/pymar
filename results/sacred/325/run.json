{
  "artifacts": [],
  "command": "my_main",
  "experiment": {
    "base_dir": "D:\\code\\pymarl",
    "dependencies": [
      "numpy==1.23.1",
      "PyYAML==6.0.2",
      "sacred==0.8.7",
      "torch==1.13.1+cu117"
    ],
    "mainfile": "main.py",
    "name": "pymarl",
    "repositories": [],
    "sources": [
      [
        "main.py",
        "_sources\\main_6cfc6b106a7b6260a99bdec266bd9680.py"
      ],
      [
        "run.py",
        "_sources\\run_0190b5a457839c8354e55d7b6ee4cf43.py"
      ],
      [
        "utils\\logging.py",
        "_sources\\logging_1c1c5c83be7ac7b7b69888b3bcb127e3.py"
      ]
    ]
  },
  "fail_trace": [
    "Traceback (most recent call last):\n",
    "  File \"C:\\Users\\maxli\\anaconda3\\envs\\pymar\\lib\\site-packages\\sacred\\config\\captured_function.py\", line 42, in captured_function\n    result = wrapped(*args, **kwargs)\n",
    "  File \"D:\\code\\pymarl\\main.py\", line 37, in my_main\n    run(_run, config, _log)\n",
    "  File \"D:\\code\\pymarl\\run.py\", line 52, in run\n    run_sequential(args=args, logger=logger)\n",
    "  File \"D:\\code\\pymarl\\run.py\", line 211, in run_sequential\n    episode_batch = runner.run(test_mode=False)\n",
    "  File \"D:\\code\\pymarl\\runners\\episode_runner.py\", line 53, in run\n    self.reset()\n",
    "  File \"D:\\code\\pymarl\\runners\\episode_runner.py\", line 49, in reset\n    self.env.reset()\n",
    "  File \"C:\\Users\\maxli\\anaconda3\\envs\\pymar\\lib\\site-packages\\smac\\env\\starcraft2\\starcraft2.py\", line 350, in reset\n    self._launch()\n",
    "  File \"C:\\Users\\maxli\\anaconda3\\envs\\pymar\\lib\\site-packages\\smac\\env\\starcraft2\\starcraft2.py\", line 300, in _launch\n    self._sc2_proc = self._run_config.start(window_size=self.window_size, want_rgb=False)\n",
    "  File \"C:\\Users\\maxli\\anaconda3\\envs\\pymar\\lib\\site-packages\\pysc2\\run_configs\\platforms.py\", line 83, in start\n    return sc_process.StarcraftProcess(\n",
    "  File \"C:\\Users\\maxli\\anaconda3\\envs\\pymar\\lib\\site-packages\\pysc2\\lib\\sc_process.py\", line 137, in __init__\n    self._controller = remote_controller.RemoteController(\n",
    "  File \"C:\\Users\\maxli\\anaconda3\\envs\\pymar\\lib\\site-packages\\pysc2\\lib\\remote_controller.py\", line 142, in __init__\n    sock = self._connect(host, port, proc, timeout_seconds)\n",
    "  File \"C:\\Users\\maxli\\anaconda3\\envs\\pymar\\lib\\site-packages\\pysc2\\lib\\stopwatch.py\", line 205, in _stopwatch\n    return func(*args, **kwargs)\n",
    "  File \"C:\\Users\\maxli\\anaconda3\\envs\\pymar\\lib\\site-packages\\pysc2\\lib\\remote_controller.py\", line 176, in _connect\n    raise ConnectError(\"Failed to connect to the SC2 websocket. Is it up?\")\n",
    "pysc2.lib.remote_controller.ConnectError: Failed to connect to the SC2 websocket. Is it up?\n"
  ],
  "heartbeat": "2025-01-03T05:58:46.702919",
  "host": {
    "ENV": {},
    "cpu": "Intel(R) Core(TM) i7-10750H CPU @ 2.60GHz",
    "gpus": {
      "driver_version": "560.70",
      "gpus": [
        {
          "model": "NVIDIA GeForce GTX 1650",
          "persistence_mode": false,
          "total_memory": 4096
        }
      ]
    },
    "hostname": "NOI-LAPTOP",
    "os": [
      "Windows",
      "Windows-10-10.0.19045-SP0"
    ],
    "python_version": "3.10.14"
  },
  "meta": {
    "command": "my_main",
    "config_updates": {},
    "named_configs": [],
    "options": {
      "--beat-interval": null,
      "--capture": null,
      "--comment": null,
      "--debug": false,
      "--enforce_clean": false,
      "--file_storage": null,
      "--force": false,
      "--help": false,
      "--id": null,
      "--loglevel": null,
      "--mongo_db": null,
      "--name": null,
      "--pdb": false,
      "--print-config": false,
      "--priority": null,
      "--queue": false,
      "--s3": null,
      "--sql": null,
      "--tiny_db": null,
      "--unobserved": false,
      "COMMAND": null,
      "UPDATE": [],
      "help": false,
      "with": false
    }
  },
  "resources": [],
  "result": null,
  "start_time": "2025-01-03T05:58:42.498920",
  "status": "FAILED",
  "stop_time": "2025-01-03T05:58:46.703924"
}